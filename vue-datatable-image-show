<template>
    <div>
            <div class="row">
      <div class="col-md-2"></div>
      <div class="col-md-8">
        <div class="card">
        <div class="card-body">
            <h3 style="text-align:center;text-decoration:underline">Menu Manage</h3>
            <router-link to="add_menu" style="float:right" class="btn btn-primary btn-sm" ><i class="fas fa-plus-circle"></i>Add Menu</router-link>
       
    
        <v-client-table :data="items" :columns="columns" :options="options">
        <!-- <v-client-table :data="items" :columns="['id', 'name' ,'age', 'DeleteCategory']" > -->
            <!-- <button  slot-scope="props" class="btn btn-danger"  @click="DeleteCategory(props.row.id)"> <i class="fa fa-trash"></i>  </button>
            
            <a  slot-scope="props" @click="editCategory(props.row)"><i class="fa fa-edit"></i></a>
             -->

             <template slot="action" slot-scope="props">
             
              <button  class="btn btn-danger"  @click="DeleteMenu(props.row.id)"> <i class="fa fa-trash"></i>  </button>
               <router-link class="btn btn-success btn-sm" :to="`/menu_edit/${props.row.id}`"><i class="fa fa-edit"></i></router-link>
         
            </template>


            </v-client-table>

            

      
        </div>
        </div>
      </div>
      <div class="col-md-2"></div>
    </div>
    </div>
</template>

<style lang="">
    
</style>


<script>
export default {

     mounted() {
        this.GetMenus();
      },
    
    data() {
        return {
             items: [],
             columns: ['id', 'menu_name','image','slug','action'],


         options: {
          templates: {
            image: (h, row) => {
              return h('img', {
                attrs: {
                  src: 'upload/Menu/'+row.image,
                  width: '50px',
                  height: '50px',
                },
              });
            },
          },
        },




        }
    },

    methods: {
        
        GetMenus(){
            axios.get('/admin/Menu-list')
            .then((result) => {
              // this.AllCategorys=result.data['category'];

               this.items = result.data['menu'];
                
            }).catch((err) => {
                
            });
        },


        
        DeleteMenu(MenuId){


         axios.get('/admin/Menu-delete/'+MenuId)
            .then((result) => {

           this.GetMenus();   
           this.ToastrSuccess('Successfully Deleted','success');
                
            }).catch((err) => {
                
            });
        },


                //..............Toastr Message Root.....
        ToastrSuccess(SuccessMessage,Status){
           const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
                })

                Toast.fire({
                icon: Status,
                title: SuccessMessage,
                })
        }


    },
}
</script>
